// Copyright 2018 The Golem Language Authors. All rights reserved.
// Use of this source code is governed by a MIT-style
// license that can be found in the LICENSE file.

import os

fn fail(func, err) {
    try {
        func()
        assert(false)
    } catch e {
        //println(e.error)
        assert(err == e.error)
    }
}

fn testExit() {
    fail(|| => os.exit('foo'), 'TypeMismatch: Expected Int, not Str')
    fail(|| => os.exit(1, 2), 'ArityMismatch: Expected 1 params, got 2')
}

fn testReadLines() {

    fail(
        || => os.open('data/no_such_file.txt'), 
        'OsError: open data/no_such_file.txt: no such file or directory')

    const file = os.open('data/lines.txt')
    const lines = file.readLines()
    assert(['abc', 'def'] == lines)
    file.close()

    assert(['abc', 'def'] == os.open('data/lines.txt').readLines())
}

fn testStat() {
    const info = os.stat('data/lines.txt')
    const props = [info.name(), info.isDir(), info.size(), info.mode()]
    assert(props == [ 'lines.txt', false, 8, 420 ])
}

fn main(args) {
    testExit()
    testReadLines()
    testStat()
    os.exit(0)
}


